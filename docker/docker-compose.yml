version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    container_name: developer-portal-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: developer_portal
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - developer-portal-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d developer_portal"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: developer-portal-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@developer-portal.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - developer-portal-network
    depends_on:
      postgres:
        condition: service_healthy

  # Optional: Redis for caching (future use)
  redis:
    image: redis:7-alpine
    container_name: developer-portal-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - developer-portal-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

networks:
  developer-portal-network:
    driver: bridge
