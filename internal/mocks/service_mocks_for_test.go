// Code generated by MockGen. DO NOT EDIT.
// Source: manual mock generation for concrete repository types used by services

package mocks

import (
	"developer-portal-backend/internal/database/models"

	"go.uber.org/mock/gomock"
)

// MockTeamRepository is a mock of TeamRepository concrete type.
type MockTeamRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTeamRepositoryMockRecorder
}

// MockTeamRepositoryMockRecorder is the mock recorder for MockTeamRepository.
type MockTeamRepositoryMockRecorder struct {
	mock *MockTeamRepository
}

// NewMockTeamRepository creates a new mock instance.
func NewMockTeamRepository(ctrl *gomock.Controller) *MockTeamRepository {
	mock := &MockTeamRepository{ctrl: ctrl}
	mock.recorder = &MockTeamRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTeamRepository) EXPECT() *MockTeamRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockTeamRepository) Create(team *models.Team) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", team)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
